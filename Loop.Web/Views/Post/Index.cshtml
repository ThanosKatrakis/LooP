@model PagedList.IPagedList<Loop.Entities.Post>
@using PagedList.Mvc;
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "Index";
}

@{
    SelectListItem a1 = new SelectListItem() { Text = "5", Value = "5" };
    SelectListItem a2 = new SelectListItem() { Text = "10", Value = "10" };
    SelectListItem a3 = new SelectListItem() { Text = "25", Value = "25" };
    SelectListItem a4 = new SelectListItem() { Text = "50", Value = "50" };
    SelectListItem a5 = new SelectListItem() { Text = "100", Value = "100" };
    List<SelectListItem> items = new List<SelectListItem>() { a1, a2, a3, a4, a5 };
}



<link href="~/Content/PagedList.css" rel="stylesheet" />
<link href="~/Content/vendor/secondary/main.min.css" rel="stylesheet" />
<link href="~/Content/vendor/secondary/style.css" rel="stylesheet" />
<link href="~/content/vendor/secondary/color.css" rel="stylesheet" />
<link href="~/content/vendor/secondary/responsive.css" rel="stylesheet" />



<div class="se-pre-con" style="padding-top:100px;"></div>
<div class="theme-layout">
    <div class="container">
        <img src="~/Content/assets/all_posts.jpg" />
        <div class="row merged20">
            <div class="col-lg-12">
                <div class="forum-warper">
                    <div class="central-meta">
                        <div class="title-block">
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="align-left">
                                        <h5>Forum Posts</h5>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="row merged20">
                                        <div class="col-lg-6 col-md-6 col-sm-6">
                                            <form method="post">
                                                @using (Html.BeginForm("Index", "Post", FormMethod.Get))
                                                {
                                                    @Html.TextBox("searchTitle", null, new { placeholder = "Search Post By Name" })
                                                }
                                            </form>
                                        </div>
                                        <div class="col-lg-3 col-md-3 col-sm-3">
                                            @Html.ActionLink("Sort By Title", "Index", "Post", new { sortOrder = ViewBag.TitleSortParam }, new { @class = "btn btn-outline-secondary btn-sm" })
                                        </div>
                                        <div class="col-lg-3 col-md-3 col-sm-3">
                                            @Html.ActionLink("Sort By Replies", "Index", "Post", new { sortOrder = ViewBag.RepliesSortParam }, new { @class = "btn btn-outline-secondary btn-sm" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><!-- title block -->
                    <h4>A new way to find help </h4>
                    <a class="addnewforum " href="~/Post/Create" title=""><i class="fa fa-plus"></i> Create Post</a>
                    @Html.PagedListPager(Model, x => @Url.Action("Index", "Post", new { page = x, sortOrder = ViewBag.TitleSortParam, pSize = ViewBag.CurrentpSize }))
                </div>
                <div class="central-meta">
                    <div class="forum-list">
                        <table class="table table-responsive">
                            <thead>
                                <tr>
                                    <th id="post-title" scope="col">Posts</th>
                                    <th scope="col">Replies</th>
                                    <th scope="col">Posted By</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var post in Model)
                                {
                                    <tr>
                                        @{
                                            int RepliesCount = post.Replies.Count();
                                        }
                                        <td>
                                            <i class="fas fa-comments"></i>
                                            @Html.ActionLink(post.Title, "Details", new { id = post.PostId })
                                            <p>@post.Text</p>

                                            @foreach (var tag in post.Tags)
                                            {

                                                <span class="badge mt-5 font-weight-normal border border-light text-white tag-post">@tag.Title</span>

                                            }


                                        </td>
                                        <td>
                                            <i class="fas fa-comments"></i>
                                            <span class="badge font-weight-normal border border-light text-white tag-post">@RepliesCount</span>
                                            @Html.ActionLink("Reply", "Create", "Reply", new { id = post.PostId }, new { @class = " btn post-reply" })


                                        <td>
                                            @if (!(post.ApplicationUserId.Length < 0))
                                            {
                                                if (!(post.ApplicationUser.Images.FirstOrDefault() is null))
                                                {
                                                    foreach (var image in post.ApplicationUser.Images)
                                                    {
                                                        if (image.ImgPath.Length > 0)
                                                        {
                                                            <img src="@Url.Content(image.ImgPath) " width="50" height="50" />
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    <img src="~/Content/Avatars/chatbot.png" width="50" height="50" />
                                                }

                                            }
                                            <br />
                                            <span class="badge  font-weight-normal border border-light text-white loopUser-name">@post.ApplicationUser.UserName</span><br />
                                            <span class="post-date">Posted : @post.PostDate.ToShortDateString()</span>
                                        </td>
                                        <td>
                                            @{
                                                var userId = User.Identity.GetUserId();

                                            }
                                            @if (User.Identity.IsAuthenticated )
                                            {
                                                if (post.ApplicationUserId == userId || User.IsInRole("Admin"))
                                                {
                                                    <a href="@Url.Action("Edit","Post", new { id = post.PostId })">
                                                        <i class="far fa-edit"></i>
                                                    </a>

                                                    <a href="@Url.Action("Delete","Post", new { id = post.PostId })">

                                                        <i class="far fa-trash-alt"></i>
                                                    </a>
                                                }
                                            }

                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                @Html.PagedListPager(Model, x => @Url.Action("Index", "Post", new { page = x, sortOrder = ViewBag.TitleSortParam, pSize = ViewBag.CurrentpSize }))
            </div>
        </div>
    </div>
</div>




